{"version":3,"file":"static/js/904.dc4f2c57.chunk.js","mappings":"6HACA,QAAuB,sBAAvB,EAA4D,8BAA5D,EAAqG,0BAArG,EAA8I,8BCA9I,GAAgB,QAAU,yBAAyB,WAAa,6B,aCCzD,SAASA,EAAQC,GACpB,OAEQC,EAAAA,EAAAA,KAAA,OAAKC,UAAWF,EAAMG,KAAI,GAAAC,OAAMC,EAAOC,QAAO,KAAAF,OAAIC,EAAOE,YAAeF,EAAOC,QAAQE,SAClFR,EAAMS,MAIvB,C,cCTA,SAAgB,IAAM,wBAAwB,UAAY,+BCEnD,SAASC,EAAWV,GACvB,OACIW,EAAAA,EAAAA,MAAA,OAAKT,UAAWG,EAAOO,UAAUJ,SAAA,EAC7BP,EAAAA,EAAAA,KAAA,OAAKC,UAAWG,EAAOQ,OACvBZ,EAAAA,EAAAA,KAAA,MAAAO,UACIP,EAAAA,EAAAA,KAACa,EAAAA,GAAO,CAACC,GAAI,YAAcf,EAAMgB,GAAId,UAAU,cAAaM,SAAER,EAAMiB,WAKpF,C,sBCZA,QAA4B,8B,2CCK5B,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAErC,IAAIC,EAAkBpB,IAEdW,EAAAA,EAAAA,MAAA,QAAMU,SAAUrB,EAAMsB,aAAcpB,UAAWG,EAAiBG,SAAA,EAC5DP,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUR,KAAK,iBAAiBS,KAAK,IAAIC,SAAU,CAACC,EAAAA,EAAUV,MAChFjB,EAAAA,EAAAA,KAAA,UAAAO,SAAQ,YAKpBY,GAAiBS,EAAAA,EAAAA,GAAU,CACvBC,KAAM,kBADOD,CAEdT,G,wBCUI,MAAMW,GAAsBC,EAAAA,EAAAA,KArBZC,IACZ,CAEP,KAIsBC,IACf,CACHC,WAAa1B,IACTyB,GAASE,EAAAA,EAAAA,GAAuB3B,GAAM,EAE1C4B,MAAOA,KACHC,QAAQC,IAAI,YACZL,GAASG,EAAAA,EAAAA,IAAM,kBAAkB,KAOVL,EDRjBhC,IAQVC,EAAAA,EAAAA,KAACmB,EAAc,CAACC,SANLmB,IACXxC,EAAMmC,WAAWK,EAAOC,gBACxBzC,EAAMqC,OAAO,M,cELrB,SAAeK,E,QAAAA,KACXV,EAAAA,EAAAA,KAdmBC,IACZ,CACHU,YAAaV,EAAMW,WAAWD,YAC9BE,aAAcZ,EAAMW,WAAWC,iBAYnCC,EAAAA,EAFJ,ECdO,SAAiB9C,GAEpB,IAAI+C,EAAS/C,EAAM2C,YAAYK,KAAIC,IAAQhD,EAAAA,EAAAA,KAACS,EAAU,CAACM,GAAIiC,EAAKjC,GAAkBC,KAAMgC,EAAKhC,MAApBgC,EAAKjC,MAC1EkC,EAAWlD,EAAM6C,aAAaG,KAAI1C,IAAWL,EAAAA,EAAAA,KAACF,EAAO,CAACI,KAAMG,EAAQ6C,GAAqB1C,KAAQH,EAAQA,SAA5BA,EAAQU,MAEzF,OACIL,EAAAA,EAAAA,MAAA,OAAKT,UAAWG,EAAYG,SAAA,EACxBP,EAAAA,EAAAA,KAAA,OAAKC,UAAWG,EAAoBG,UAChCP,EAAAA,EAAAA,KAAA,MAAAO,SACKuC,OAGTpC,EAAAA,EAAAA,MAAA,OAAKT,UAAWG,EAAgBG,SAAA,EAC5BP,EAAAA,EAAAA,KAAA,OAAKC,UAAWG,EAAoBG,SAC/B0C,KAGLjD,EAAAA,EAAAA,KAAC8B,EAAmB,CAACqB,MAASpD,EAAMoD,aAIpD,G","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.scss?d037","webpack://my-app/./src/components/Dialogs/Message/Message.module.scss?a735","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.scss?c926","components/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/components/Dialogs/NewMessage/NewMessage.module.scss?a5e4","components/Dialogs/NewMessage/NewMessage.jsx","components/Dialogs/NewMessage/NewMessageContainer.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Dialogs_main__EPPZt\",\"dialog_items\":\"Dialogs_dialog_items__HC3IM\",\"messages\":\"Dialogs_messages__JabOU\",\"messagesWrap\":\"Dialogs_messagesWrap__7og69\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__l4j-k\",\"my_message\":\"Message_my_message__G5TvR\"};","import styles from \"./Message.module.scss\"\r\n\r\nexport function Message(props) {\r\n    return (\r\n\r\n            <div className={props.isMy ? `${styles.message} ${styles.my_message}` : styles.message}>\r\n                {props.text}\r\n\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"DialogItem_ava__9LFQw\",\"container\":\"DialogItem_container__yoZUO\"};","import {NavLink} from \"react-router-dom\";\r\nimport styles from \"./DialogItem.module.scss\"\r\n\r\nexport function DialogItem(props) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.ava}></div>\r\n            <li>\r\n                <NavLink to={\"/dialogs/\" + props.id} className=\"dialog_item\">{props.name}</NavLink>\r\n            </li>\r\n        </div>\r\n\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NewMessage_container__eqM2B\"};","import styles from \"./NewMessage.module.scss\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nlet NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.container}>\r\n            <Field component={Textarea} name=\"newMessageText\" rows=\"3\" validate={[required, maxLength10]} />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nNewMessageForm = reduxForm({\r\n    form: 'newMessageForm'\r\n})(NewMessageForm)\r\n\r\nlet NewMessage = (props) => {\r\n\r\n    const submit = values => {\r\n        props.addMessage(values.newMessageText);\r\n        props.reset()\r\n    }\r\n\r\n    return (\r\n        <NewMessageForm onSubmit={submit} />\r\n    )\r\n}\r\n\r\nexport {NewMessage}","import React from \"react\";\r\nimport {createActionAddMessage} from \"../../../Redux/dialogs-reduser\";\r\nimport {NewMessage} from \"./NewMessage\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from 'redux-form';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch(createActionAddMessage(text))\r\n        },\r\n        reset: () => {\r\n            console.log('resetttt')\r\n            dispatch(reset('newMessageForm'));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const NewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(NewMessage)","import {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogPage.dialogsData,\r\n        messagesData: state.dialogPage.messagesData,\r\n    }\r\n}\r\n\r\n\r\n\r\n// let authRedirectComponent = withAuthRedirect(Dialogs);\r\n//\r\n// export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(authRedirectComponent)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import styles from './Dialogs.module.scss';\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {NewMessageContainer} from \"./NewMessage/NewMessageContainer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport function Dialogs(props) {\r\n\r\n    let dialogs= props.dialogsData.map(item => <DialogItem id={item.id} key={item.id} name={item.name}/>)\r\n    let messages = props.messagesData.map(message => <Message isMy={message.my} key={message.id} text = {message.message}/>)\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.dialog_items}>\r\n                <ul>\r\n                    {dialogs}\r\n                </ul>\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div className={styles.messagesWrap}>\r\n                    {messages}\r\n                </div>\r\n\r\n                <NewMessageContainer store = {props.store} />\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":["Message","props","_jsx","className","isMy","concat","styles","message","my_message","children","text","DialogItem","_jsxs","container","ava","NavLink","to","id","name","maxLength10","maxLengthCreator","NewMessageForm","onSubmit","handleSubmit","Field","component","Textarea","rows","validate","required","reduxForm","form","NewMessageContainer","connect","state","dispatch","addMessage","createActionAddMessage","reset","console","log","values","newMessageText","compose","dialogsData","dialogPage","messagesData","withAuthRedirect","dialogs","map","item","messages","my","store"],"sourceRoot":""}